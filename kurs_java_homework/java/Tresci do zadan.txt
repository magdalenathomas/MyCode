zadanie 1. Kwadraty -  U¿ywaj¹c tylko dwóch pêtli for i znaku "#" narysowaæ dwa kwadraty jeden w drugim. 
zadanie 2. calculator – Obiektowy kalkulator, wykonuj¹cy cztery podstawowe obliczenia suma (+), ró¿nica (-), iloczyn (*) i iloraz (/). Aplikacja komunikuje siê z u¿ytkownikiem. Liczby nale¿y wprowadzaæ oddzielone spacj¹, po wciœniêciu enter pojawia siê wynik. Wciœniêcie ‘q’ powoduje przerwanie pracy programu. 
zadanie 2. collection – klasa InfinityTab zbudowana z zaimplementowanym interfacem Appendable (author pawel.apanasewicz@codeme.pl ), która umo¿liwia dodanie elementu do tabicy oraz dodanie obiektu na konkretn¹ pozycjê w tablicy, jeœli na podanej pozycji jest ju¿ element, zostanie zmieniony.  Jeœli w tablicy nie istnieje podany indeks, stworzenie nowej tablicy. 
zadanie 2. obj -  rozk³ad dowolnego przyk³adu z ¿ycia na czynniki pierwsze, znalezienie czêœci wspólnej, wielopostaciowoœæ.  Klasa abstrakcyjna Ssak, interface Pet, Pig i Dog dziedziczy po klasie Ssak oraz ma zaimplementowany interface. App klasa uruchamiaj¹ca.   
zadanie 2. Browser – praca ze Stringiem.  Funkcja countWords zlicza wyst¹pienia s³owa stary oraz morze niezale¿nie od wielkoœci liter. ConutAllWords zlicza iloœæ wszystkich s³ów.  CountLastLetters – zlicza iloœæ s³ów koñcz¹cych siê na litery „ec”.   
zadanie 2. Calculator – Strukturalny kalkulator, wykonuj¹cy cztery podstawowe obliczenia suma (+), ró¿nica (-), iloczyn (*) i iloraz (/). Aplikacja komunikuje siê z u¿ytkownikiem.  Wciœniêcie ‘q’ powoduje przerwanie pracy programu. 
zadanie 3. enigma – program umo¿liwiaj¹cy szyfrowane i deszyfrowanie plików. U¿ytkownik wprowadza œcie¿kê do pliku zaszyfrowanego lub niezaszyfrowanego. Wciœniêcie enter powoduje szyfrowanie lub deszyfrowanie pliku w podanej lokalizacji. Szyfruj¹c plik tworzymy nowy plik o rozszerzeniu src, natomiast deszyfrowuj¹c o rozszerzeniu txt. Wciœniêcie ‘q’ powoduje przerwanie pracy programu. 
zadanie 3. magazyn – wykorzystuj¹c wzorzec Bean stworzono klasê abstrakcyjn¹, która reprezentuje produkt. Aplikacja umo¿liwia podgl¹d informacji tj. nazwa, cena, jednostka miary.    	
zadanie 3. magazynAmbitni – na podstawie zadania „Magazyn” oraz „collection”, w którym wykorzystywano interfejs  „nieskoñczona tablica”.  Aplikacja symuluje dzia³anie magazynu. U¿ytkownik wprowadza dane produktu, a nastêpnie wybiera odpowiedni¹ funkcjonalnoœæ. Istnieje mo¿liwoœæ dodanie produktu do magazynu, wydania produktu z magazynu oraz wypisanie informacji o stanie magazynu. Dodanie do magazynu produktu, który ju¿ istnieje powoduje zwiêkszenie jego iloœci.     
zadanie 3. CalculatorEnum  - aplikacja kalkulatora parta na typie wyliczeniowym enum oraz instrukcji warunkowej switch. Aplikacja komunikuje siê z u¿ytkownikiem. Wciœniêcie ‘q’ przerywa dzia³anie programu. 
zadanie 4. calculator – aplikacja kalkulatora stworzona z wykorzystaniem wzorca fabryki abstrakcyjnej oraz strategii. Klasa fabryki rozpoznaje operacjê, któr¹ u¿ytkownik chce realizowaæ i zwraca pod postaci¹ odpowiedniego interfejsu obiekt realizuj¹cy operacjê. Interfejs kalkulatora zbudowany jest z u¿yciem JavaFX.
zadanie 4. threads – aplikacja symuluj¹ca jazdê autem z okreœlon¹ prêdkoœci¹. W trakcie jazdy, co sekundê wypisywany jest przejechany dystans, po pokonaniu 100m auto zatrzymuje siê.  AppThreads klasa uruchamialna. 	 
